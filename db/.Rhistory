install.packages("rmeta")
install.packages("Rtools")
library("rmeta")
> source("http://bioconductor.org/biocLite.R")
> biocLite()
source ("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
> biocLite()
source("http://bioconductor.org/biocLite.R")biocLite()
source("http://bioconductor.org/biocLite.R")
> biocLite()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("msa")
library(msa)
system.file("tex", "texshade.sty", package="msa")
mySequenceFile <- system.file("examples", "exampleAA.fasta", package="msa")
mySequences <- readAAStringSet(mySequenceFile)
mySequences
myFirstAlignment <- msa(mySequences)
## use default substitution matrix
msa(mySequences)
print(myFirstAlignment, show="complete")
system.file("tex", "texshade.sty", package="msa")
msaPrettyPrint(myFirstAlignment, output="pdf", showNames="none",
showLogo="none", askForOverwrite=FALSE, verbose=FALSE)
msaPrettyPrint(myFirstAlignment, y=c(164, 213), output="asis",
showNames="none", showLogo="none", askForOverwrite=FALSE)
msaPrettyPrint(myFirstAlignment, output="pdf", showNames="none",
showLogo="none", askForOverwrite=FALSE, verbose=FALSE)
View(myFirstAlignment)
View(mySequences)
View(myFirstAlignment)
install.packages("phangorn")
library(ape)
library(phangorn)
library(seqinr)
setwd("C:/Users/Lexie Christopoulos/Repos/GenomeSequencing-/db")
HA_H1 <- read.dna("HA/tree_alignments/HA_edited_NCR_alignments.fasta", format = "fasta")
HA_H1 <- read.dna("/HA/tree_alignments/HA_edited_NCR_alignments.fasta", format = "fasta")
HA_H1 <- read.dna("db/HA/tree_alignments/HA_edited_NCR_alignments.fasta", format = "fasta")
HA_H1 <- read.dna("HA/tree_alignments/HA_edited_NCR_alignment.fasta", format = "fasta")
HA_H1 <- read.dna("HA/tree_alignments/HA_H1_edited_NCR_alignment.fasta", format = "fasta")
HA_H1_phyDat <- phyDat(HA_H1, type = "DNA", levels =NULL)
mt <- modelTest(HA_H1)
mt <- modelTest(HA_H1_phyDat)
print(mt)
mt <- modelTest(HA_H1_phyDat)
print(mt)
min(mt)
mt <- modelTest(HA_H1_phyDat)
#print(mt)
min(mt[4])
dna_dist <- dist.ml(HA_H1_phyDat, model = "TPM1u+G(4)+I")
dna_dist <- dist.ml(HA_H1_phyDat, model = "JC69")
HA_H1_UPGMA <- upgma(dna_dist)
HA_H1_NJ <- NJ(dna_dist)
plot(HA_H1_UPGMA, main = "UPGMA")
plot(HA_H1_NJ, main = "Neighbor Joining")
parsimony(HA_H1_UPGMA)
parsimony(HA_H1_UPGMA, data = "phyDat")
View(HA_H1_NJ)
View(HA_H1_UPGMA)
parsimony(HA_H1_UPGMA, data = HA_H1_phyDat)
parsimony(HA_H1_NJ, data = HA_H1_phyDat)
#parsimony(HA_H1_UPGMA, data = HA_H1_phyDat)
#parsimony(HA_H1_NJ, data = HA_H1_phyDat)
#UPGMA = 831, NJ = 759 <-
HA_H1_optim <- optim.parsimony(HA_H1_NJ, HA_H1_phyDat)
HA_H1_pratchet <- pratchet(HA_H1_phyDat)
plot(HA_H1_optim)
plot(HA_H1_pratchet)
#parsimony(HA_H1_UPGMA, data = HA_H1_phyDat)
#parsimony(HA_H1_NJ, data = HA_H1_phyDat)
#UPGMA = 831, NJ = 759 <-
HA_H1_optim <- optim.parsimony(HA_H1_NJ, HA_H1_phyDat)
HA_H1_pratchet <- pratchet(HA_H1_phyDat)
plot(HA_H1_optim, main = "Optimum")
plot(HA_H1_pratchet, main = "pratchet")
fit <- pml(HA_H1_NJ, HA_H1_phyDat)
print(fit)
fit <- pml(HA_H1_NJ, HA_H1_phyDat)
#print(fit)
fitJC <- optim.pml(fit, model = "JC", rearrangement = "stochastic")
logLik(fitJC)
fit <- pml(HA_H1_NJ, HA_H1_phyDat)
#print(fit)
#fitJC <- optim.pml(fit, model = "JC", rearrangement = "stochastic")
#logLik(fitJC)
fitJC2 <-optim.pml(fit, model = "JC", rearrangement = "ratchet")
logLik(fitJC2)
fit <- pml(HA_H1_NJ, HA_H1_phyDat)
print(fit)
fitJC <- optim.pml(fit, model = "JC", rearrangement = "stochastic")
logLik(fitJC)
bs <- bootstrap.pml(fitJC, bs =100, optNni=TRUE, multicore=TRUE, control = pml.control(trace=0))
plotBS(midpoint(fitJC$tree), bs, p = 50, type="p")
write.tree(bs, file = "HA/HA_H1_tree,tre")
write.tree(bs, file = "HA/HA_H1_tree.tre")
write.tree(bs, file = "HA/HA_H1_tree.tree")
library(ape)
library(phangorn)
library(seqinr)
library("Biostrings")
library("ggplot2")
library("ggtree")
nwk <- system.file("extdata", "HA_H1_tree.tree", package = "ggtree")
tree <- read.tree(nwk)
